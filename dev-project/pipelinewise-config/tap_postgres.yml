---
# ------------------------------------------------------------------------------
# General Properties
# Doc: https://transferwise.github.io/pipelinewise/connectors/taps/postgres.html
# ------------------------------------------------------------------------------
id: "postgres_db"                      # Unique identifier of the tap
name: "Sample Postgres Database"       # Name of the tap
type: "tap-postgres"                   # !! THIS SHOULD NOT CHANGE !!
owner: "somebody@foo.com"              # Data owner to contact


# ------------------------------------------------------------------------------
# Source (Tap) - PostgreSQL connection details
# ------------------------------------------------------------------------------
db_conn:
  host: "db_postgres_source"           # PostgreSQL host
  port: 5432                           # PostgreSQL port
  user: "pipelinewise"                 # PostfreSQL user
  password: "secret"                   # Plain string or vault encrypted
  dbname: "postgres_source_db"         # PostgreSQL database name
  logical_poll_total_seconds: 5        # Seconds to wait before assuming no more data
                                       #    on older versions of PostgreSQL, this needs to be
                                       #    increased if source server has very old wal files
  #filter_schemas: "schema1,schema2"   # Optional: Scan only the required schemas
                                       #    to improve the performance of
                                       #    data extraction


# ------------------------------------------------------------------------------
# Destination (Target) - Target properties
# Connection details should be in the relevant target YAML file
# ------------------------------------------------------------------------------
target: "postgres_dwh"                 # ID of the target connector where the data will be loaded
batch_size_rows: 20000                 # Batch size for the stream to optimise load performance


# ------------------------------------------------------------------------------
# Source to target Schema mapping
# ------------------------------------------------------------------------------
schemas:
  - source_schema: "public"           # Source schema in postgres with tables
    target_schema: "postgres_world"   # Target schema in the destination Data Warehouse
    # target_schema_select_permissions: # Optional: Grant SELECT on schema and tables that created
    #  - grp_read_only
    tables:
    # List of tables to replicate from Postgres to destination Data Warehouse
    # Please check the Replication Strategies section in the documentation to understand the differences.
      - table_name: "edgydata"
        replication_method: "FULL_TABLE"  # INCREMENTAL, LOG_BASED or FULL_TABLE (Default LOG_BASED)

      - table_name: "country"
        replication_method: "FULL_TABLE"

      - table_name: "city"
        replication_method: "INCREMENTAL"
        replication_key: "id"
        # transformations:                  # Optional: Load time transformations
        #  - column: "population"           # Column to transform
        #    type: "MASK-NUMBER"            # Transformation type

      - table_name: "countrylanguage"
        replication_method: "FULL_TABLE"

  - source_schema: "public2"
    target_schema: "postgres_world_2"

    tables:
      - table_name: "wearehere"
        replication_method: "FULL_TABLE"
      - table_name: "public2_edgydata"
        replication_method: "INCREMENTAL"
        replication_key: "cid"


# ------------------------------------------------------------------------------
# LOG_BASED replication data
#   requires wal2json plugin and other source adjustments
#   LOG_BASED is the default replication_method
# ------------------------------------------------------------------------------
  - source_schema: "logical1"
    target_schema: "postgres_world_logical1"
    tables:
      - table_name: "logical1_table1"
        replication_method: "LOG_BASED"
      - table_name: "logical1_table2"
      - table_name: "logical1_edgydata"

  - source_schema: "logical2"
    target_schema: "postgres_world_logical2"
    tables:
      - table_name: "logical2_table1"

  - source_schema: "logical3"
    target_schema: "postgres_world_logical3"
    tables:
      - table_name: "logical3_table1"

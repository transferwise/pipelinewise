version: 2
jobs:
  # Install PipelineWise components:
  #  Singer components
  #  FastSync components
  #  Command Line Interface
  build:

    # Required docker containers
    docker:
      # Primary container image where all commands run
      - image: circleci/python:3.6.2
        environment:
          TAP_POSTGRES_HOST: localhost
          TAP_POSTGRES_PORT: 5432
          TAP_POSTGRES_USER: pipelinewise
          TAP_POSTGRES_PASSWORD: secret
          TAP_POSTGRES_DBNAME: postgres_source_db

      # PostgreSQL service container image used as test source database
      - image: circleci/postgres:9.6.14
        environment:
          POSTGRES_USER: pipelinewise
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: postgres_source_db

    # Steps to build the full test environment and to run the tests
    steps:
      - checkout

      # Install OS dependencies
      - run:
          name: 'Install OS dependencies'
          command: |
            sudo apt-get update
            sudo apt install postgresql-client

      # Build source databases for integration tests
      - run:
          name: 'Build source databases for integration tests'
          command: ./.circleci/tap_postgres_test_db.sh

      # Installing PipelineWise components and connectors
      - run:
          name: 'Installing PipelineWise components and connectors'
          command: ./install.sh --acceptlicenses

      # Unit Tests and Coverage
      - run:
          name: 'Unit Tests and Coverage'
          command: |
            . .virtualenvs/cli/bin/activate
            pip install pytest coverage
            cd cli
            coverage run -m pytest --disable-pytest-warnings
            coverage report
            coverage html -d coverage_html

  # For documentation deployment. You'll need the following environment vars
  # in your Circle CI settings, otherwise this will not work.
  #
  # GH_NAME (your git username)
  # GH_EMAIL (your git email)
  # GH_TOKEN (the personal Git token with pushes enabled)
  deploy-doc:
    docker:
      - image: circleci/python:3.6.2
    working_directory: ~/gh_doc_automation
    steps:
      - checkout
      - run: .circleci/publish_docs.sh

workflows:
  version: 2
  build:
    jobs:
      - build

  deploy:
    jobs:
      - deploy-doc
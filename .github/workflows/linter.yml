name: Linter

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
      - name: Checking out repo
        uses: actions/checkout@v2

      - name: Check if python changes are present
        id: check
        env:
          GITHUB_REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        continue-on-error: true
        run: ./scripts/ci_check_no_file_changes.sh python

      - name: Set up Python ${{ matrix.python-version }}
        if: steps.check.outcome == 'failure'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        if: steps.check.outcome == 'failure'
        run: |
          pip install -U pip setuptools wheel
          pip install -Ue .[test]

      - name: Check code formatting
        if: steps.check.outcome == 'failure'
        run: find pipelinewise tests -type f -name '*.py' | xargs unify --check-only

      - name: Pylinting
        if: steps.check.outcome == 'failure'
        run: pylint pipelinewise tests

      - name: Pep8
        if: steps.check.outcome == 'failure'
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --max-complexity=15 --max-line-length=120 --statistics

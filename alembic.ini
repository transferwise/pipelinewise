# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = pipelinewise/db

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# max length of characters to apply to the
# "slug" field
#truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; this defaults
# to help/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/bar %(here)s/bat help/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

; sqlalchemy.url = scheme://localhost/thabala
; sqlalchemy.url = postgresql://pipelinewise:secret@db_pipelinewise:5432/pipelinewise

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic,pipelinewise

[handlers]
keys=stderr,stdout

[formatters]
keys = child

[logger_root]
level=INFO
handlers=stderr
formatter=child
propagate=0

[logger_pipelinewise]
level=INFO
handlers=stdout
formatter=child
propagate=0
qualname=pipelinewise

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_stderr]
level=INFO
class=StreamHandler
formatter=child
args=(sys.stderr,)

[handler_stdout]
level=INFO
class=StreamHandler
formatter=child
args=(sys.stdout,)

[formatter_child]
class=logging.Formatter
format=time=%(asctime)s logger_name=%(name)s log_level=%(levelname)s message=%(message)s
datefmt=%Y-%m-%d %H:%M:%S
